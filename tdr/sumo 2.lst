CCS PCM C Compiler, Version 4.088, 5967               15-jul-16 13:04

               Filename: C:\Users\Administrator\Desktop\Ignasi i Bernat i Andreu\sumo 2.lst

               ROM used: 667 words (8%)
                         Largest free fragment is 2048
               RAM used: 31 (8%) at main() level
                         32 (9%) worst case
               Stack:    4 worst case (2 in main + 2 for interrupts)

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   1DB
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  MOVLW  8C
001A:  MOVWF  04
001B:  BTFSS  00.0
001C:  GOTO   01F
001D:  BTFSC  0C.0
001E:  GOTO   032
001F:  MOVF   22,W
0020:  MOVWF  04
0021:  MOVF   23,W
0022:  MOVWF  77
0023:  MOVF   24,W
0024:  MOVWF  78
0025:  MOVF   25,W
0026:  MOVWF  79
0027:  MOVF   26,W
0028:  MOVWF  7A
0029:  MOVF   27,W
002A:  MOVWF  7B
002B:  MOVF   20,W
002C:  MOVWF  0A
002D:  SWAPF  21,W
002E:  MOVWF  03
002F:  SWAPF  7F,F
0030:  SWAPF  7F,W
0031:  RETFIE
0032:  BCF    0A.3
0033:  BCF    0A.4
0034:  GOTO   035
.................... #include <16f877.h>                    // Selecciona el PIC 
.................... //////// Standard Header file for the PIC16F877 device //////////////// 
.................... #device PIC16F877 
.................... #list 
....................  
.................... #fuses XT,NOWDT,NOPROTECT,PUT,BROWNOUT // Opciones de configuraci?n 
.................... #use delay(clock=20000000)              // Velocidad del Cristal : 20 Mhz 
017B:  MOVLW  39
017C:  MOVWF  04
017D:  BCF    03.7
017E:  MOVF   00,W
017F:  BTFSC  03.2
0180:  GOTO   18E
0181:  MOVLW  06
0182:  MOVWF  78
0183:  CLRF   77
0184:  DECFSZ 77,F
0185:  GOTO   184
0186:  DECFSZ 78,F
0187:  GOTO   183
0188:  MOVLW  7B
0189:  MOVWF  77
018A:  DECFSZ 77,F
018B:  GOTO   18A
018C:  DECFSZ 00,F
018D:  GOTO   181
018E:  RETLW  00
.................... #use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7) // Definici?n del RS232 
....................  
.................... int aux=0;                           // variable auxiliar usada al timer 1 
*
01EC:  BCF    03.5
01ED:  CLRF   28
.................... int movimiento=5;                    // variable que regulara el switch case del timer 1, comen?ara en parada 
01EE:  MOVLW  05
01EF:  MOVWF  29
.................... int umbral_linia=80;                 // calibracio dels sensors de linea 
01F0:  MOVLW  50
01F1:  MOVWF  2A
.................... int umbral_distancia_esquerra=40;    // calibracio sensors distancia 
01F2:  MOVLW  28
01F3:  MOVWF  2B
.................... int umbral_distancia_dreta=40;       // calibracio sensor distancia 
01F4:  MOVWF  2C
.................... int endavant=0;                      // definim nom a les funcions del switch case del timer 1  
01F5:  CLRF   2D
.................... int endarrere=2; 
01F6:  MOVLW  02
01F7:  MOVWF  2E
.................... int rastreig=6; 
01F8:  MOVLW  06
01F9:  MOVWF  2F
.................... int volta_rellotge=7; 
01FA:  MOVLW  07
01FB:  MOVWF  30
.................... int volta_antirellotge=8; 
01FC:  MOVLW  08
01FD:  MOVWF  31
.................... int dreta_linia, dreta_ulls, esquerra_linia, esquerra_ulls, central_linia; // definim les variables dels valors dels sensors 
....................  
.................... #INT_TIMER1                             // Interrupci? per desbordament 
.................... void isr_timer1() {                                  
....................       switch(movimiento){ 
*
0035:  MOVF   29,W
0036:  ADDLW  F7
0037:  BTFSC  03.0
0038:  GOTO   16A
0039:  ADDLW  09
003A:  GOTO   16E
....................          case 0:                        // endavant 
....................             switch(aux){ 
003B:  MOVF   28,W
003C:  BTFSC  03.2
003D:  GOTO   045
003E:  XORLW  01
003F:  BTFSC  03.2
0040:  GOTO   053
0041:  XORLW  03
0042:  BTFSC  03.2
0043:  GOTO   05D
0044:  GOTO   067
....................                case 0:                    // si aux es 0 va endavant 
....................                 
....................                output_high(PIN_B2);       // fem un high als dos durant 0,5 ms 
0045:  BSF    03.5
0046:  BCF    06.2
0047:  BCF    03.5
0048:  BSF    06.2
....................                output_high(PIN_B1); 
0049:  BSF    03.5
004A:  BCF    06.1
004B:  BCF    03.5
004C:  BSF    06.1
....................                set_timer1(65223);          
004D:  MOVLW  FE
004E:  MOVWF  0F
004F:  MOVLW  C7
0050:  MOVWF  0E
....................                aux++;                     // cambien l'estat de l'auxiliar 
0051:  INCF   28,F
....................                break; 
0052:  GOTO   067
....................                
....................               case 1: 
....................                output_low(PIN_B2);        // un low al connectat al B2 durant 2 ms 
0053:  BSF    03.5
0054:  BCF    06.2
0055:  BCF    03.5
0056:  BCF    06.2
....................                set_timer1(64286); 
0057:  MOVLW  FB
0058:  MOVWF  0F
0059:  MOVLW  1E
005A:  MOVWF  0E
....................                aux++; 
005B:  INCF   28,F
....................                break; 
005C:  GOTO   067
....................                 
....................                case 2:                    // quan cambia l'estat de l'auxiliar 
....................                output_low(PIN_B1);        // es baixa l'estat de l'altre durant 17,5 ms 
005D:  BSF    03.5
005E:  BCF    06.1
005F:  BCF    03.5
0060:  BCF    06.1
....................                set_timer1(54598);         
0061:  MOVLW  D5
0062:  MOVWF  0F
0063:  MOVLW  46
0064:  MOVWF  0E
....................                aux=0; 
0065:  CLRF   28
....................                break; 
0066:  GOTO   067
....................             } 
....................              break;   
0067:  GOTO   16A
....................            
....................           case 1:                         // aquesta funcio realitzaria un fre actiu (no usat al programa) 
....................                switch(aux){ 
0068:  MOVF   28,W
0069:  BTFSC  03.2
006A:  GOTO   072
006B:  XORLW  01
006C:  BTFSC  03.2
006D:  GOTO   080
006E:  XORLW  03
006F:  BTFSC  03.2
0070:  GOTO   08E
0071:  GOTO   09C
....................                case 0: 
....................                output_high(PIN_B2); 
0072:  BSF    03.5
0073:  BCF    06.2
0074:  BCF    03.5
0075:  BSF    06.2
....................                output_high(PIN_B1); 
0076:  BSF    03.5
0077:  BCF    06.1
0078:  BCF    03.5
0079:  BSF    06.1
....................                set_timer1(64598); 
007A:  MOVLW  FC
007B:  MOVWF  0F
007C:  MOVLW  56
007D:  MOVWF  0E
....................                aux++; 
007E:  INCF   28,F
....................                break; 
007F:  GOTO   09C
....................                 
....................                case 1: 
....................                output_low(PIN_B2); 
0080:  BSF    03.5
0081:  BCF    06.2
0082:  BCF    03.5
0083:  BCF    06.2
....................                output_low(PIN_B1); 
0084:  BSF    03.5
0085:  BCF    06.1
0086:  BCF    03.5
0087:  BCF    06.1
....................                set_timer1(53973); 
0088:  MOVLW  D2
0089:  MOVWF  0F
008A:  MOVLW  D5
008B:  MOVWF  0E
....................                aux=0; 
008C:  CLRF   28
....................                break; 
008D:  GOTO   09C
....................                 
....................                case 2:                    // en cas de que l'auxiliar sigui 2 fara el mateix que si fos 1 
....................                output_low(PIN_B2); 
008E:  BSF    03.5
008F:  BCF    06.2
0090:  BCF    03.5
0091:  BCF    06.2
....................                output_low(PIN_B1); 
0092:  BSF    03.5
0093:  BCF    06.1
0094:  BCF    03.5
0095:  BCF    06.1
....................                set_timer1(53973); 
0096:  MOVLW  D2
0097:  MOVWF  0F
0098:  MOVLW  D5
0099:  MOVWF  0E
....................                aux=0; 
009A:  CLRF   28
....................                break; 
009B:  GOTO   09C
....................                } 
....................                 
....................              break;   
009C:  GOTO   16A
....................            case 2:                        // enrere 
....................                switch(aux){ 
009D:  MOVF   28,W
009E:  BTFSC  03.2
009F:  GOTO   0A7
00A0:  XORLW  01
00A1:  BTFSC  03.2
00A2:  GOTO   0B5
00A3:  XORLW  03
00A4:  BTFSC  03.2
00A5:  GOTO   0BF
00A6:  GOTO   0C9
....................                case 0:                    // si aux es 0 va endavant 
....................                output_high(PIN_B2);       // fem un high als dos durant 0,5 ms 
00A7:  BSF    03.5
00A8:  BCF    06.2
00A9:  BCF    03.5
00AA:  BSF    06.2
....................                output_high(PIN_B1); 
00AB:  BSF    03.5
00AC:  BCF    06.1
00AD:  BCF    03.5
00AE:  BSF    06.1
....................                set_timer1(65223);          
00AF:  MOVLW  FE
00B0:  MOVWF  0F
00B1:  MOVLW  C7
00B2:  MOVWF  0E
....................                aux++;                     // cambien l'estat de l'auxiliar 
00B3:  INCF   28,F
....................                break; 
00B4:  GOTO   0C9
....................                
....................               case 1: 
....................                output_low(PIN_B1);        // un low al connectat al B1 durant 2 ms 
00B5:  BSF    03.5
00B6:  BCF    06.1
00B7:  BCF    03.5
00B8:  BCF    06.1
....................                set_timer1(64286); 
00B9:  MOVLW  FB
00BA:  MOVWF  0F
00BB:  MOVLW  1E
00BC:  MOVWF  0E
....................                aux++; 
00BD:  INCF   28,F
....................                break; 
00BE:  GOTO   0C9
....................                 
....................                case 2:                    // quan cambia l'estat de l'auxiliar 
....................                output_low(PIN_B2);        // es baixa l'estat de l'altre durant 17,5 ms 
00BF:  BSF    03.5
00C0:  BCF    06.2
00C1:  BCF    03.5
00C2:  BCF    06.2
....................                set_timer1(54598);         // durant 17,5 ms 
00C3:  MOVLW  D5
00C4:  MOVWF  0F
00C5:  MOVLW  46
00C6:  MOVWF  0E
....................                aux=0; 
00C7:  CLRF   28
....................                break; 
00C8:  GOTO   0C9
....................             } 
....................             break; 
00C9:  GOTO   16A
....................              
....................              case 5:                      // per fer la parada simplement no donarem senyal als motors 
....................                output_low(PIN_B2); 
00CA:  BSF    03.5
00CB:  BCF    06.2
00CC:  BCF    03.5
00CD:  BCF    06.2
....................                output_low(PIN_B1); 
00CE:  BSF    03.5
00CF:  BCF    06.1
00D0:  BCF    03.5
00D1:  BCF    06.1
....................                break; 
00D2:  GOTO   16A
....................                 
....................              case 6:                      // es realitza un gir per a buscar el robot contrari 
....................                 
....................                   switch(aux){ 
00D3:  MOVF   28,W
00D4:  BTFSC  03.2
00D5:  GOTO   0DD
00D6:  XORLW  01
00D7:  BTFSC  03.2
00D8:  GOTO   0EB
00D9:  XORLW  03
00DA:  BTFSC  03.2
00DB:  GOTO   0F5
00DC:  GOTO   0FF
....................                      case 0: 
....................                      output_high(PIN_B2);          // els dos servos hauran de girar en el mateix sentit 
00DD:  BSF    03.5
00DE:  BCF    06.2
00DF:  BCF    03.5
00E0:  BSF    06.2
....................                      output_high(PIN_B1); 
00E1:  BSF    03.5
00E2:  BCF    06.1
00E3:  BCF    03.5
00E4:  BSF    06.1
....................                      set_timer1(65223);            // enviem una senyal de 0,5 ms a tots dos 
00E5:  MOVLW  FE
00E6:  MOVWF  0F
00E7:  MOVLW  C7
00E8:  MOVWF  0E
....................                      aux++; 
00E9:  INCF   28,F
....................                      break; 
00EA:  GOTO   0FF
....................                 
....................                      case 1: 
....................                      output_low(PIN_B2);           // mantenim la senyal al pin_b1 durant aproximadament 1 ms 
00EB:  BSF    03.5
00EC:  BCF    06.2
00ED:  BCF    03.5
00EE:  BCF    06.2
....................                      set_timer1(64900);            // d'aquesta manera una roda gira i l'altre es mant? fixa permeten abarcar mes rang de deteccion 
00EF:  MOVLW  FD
00F0:  MOVWF  0F
00F1:  MOVLW  84
00F2:  MOVWF  0E
....................                      aux=0; 
00F3:  CLRF   28
....................                      break; 
00F4:  GOTO   0FF
....................                      case 2:                        
....................                      output_low(PIN_B1); 
00F5:  BSF    03.5
00F6:  BCF    06.1
00F7:  BCF    03.5
00F8:  BCF    06.1
....................                      set_timer1(53973);            // la resta de temps (18,5 ms) mantenim la senyal en low 
00F9:  MOVLW  D2
00FA:  MOVWF  0F
00FB:  MOVLW  D5
00FC:  MOVWF  0E
....................                      aux=0; 
00FD:  CLRF   28
....................                      break; 
00FE:  GOTO   0FF
....................                      } 
....................                   break; 
00FF:  GOTO   16A
....................                  case 7:                           // un gir en el sentit contrari 
....................                      switch(aux){ 
0100:  MOVF   28,W
0101:  BTFSC  03.2
0102:  GOTO   10A
0103:  XORLW  01
0104:  BTFSC  03.2
0105:  GOTO   118
0106:  XORLW  03
0107:  BTFSC  03.2
0108:  GOTO   126
0109:  GOTO   134
....................                      case 0: 
....................                      output_high(PIN_B2);          // els dos servos hauran de girar en el mateix sentit 
010A:  BSF    03.5
010B:  BCF    06.2
010C:  BCF    03.5
010D:  BSF    06.2
....................                      output_high(PIN_B1); 
010E:  BSF    03.5
010F:  BCF    06.1
0110:  BCF    03.5
0111:  BSF    06.1
....................                      set_timer1(65223);            // enviem una senyal de 0,5 ms a tots dos 
0112:  MOVLW  FE
0113:  MOVWF  0F
0114:  MOVLW  C7
0115:  MOVWF  0E
....................                      aux++; 
0116:  INCF   28,F
....................                      break; 
0117:  GOTO   134
....................                 
....................                      case 1: 
....................                      output_low(PIN_B2);           // la resta (19,5 ms) estaran en estat baix 
0118:  BSF    03.5
0119:  BCF    06.2
011A:  BCF    03.5
011B:  BCF    06.2
....................                      output_low(PIN_B1); 
011C:  BSF    03.5
011D:  BCF    06.1
011E:  BCF    03.5
011F:  BCF    06.1
....................                      set_timer1(53348); 
0120:  MOVLW  D0
0121:  MOVWF  0F
0122:  MOVLW  64
0123:  MOVWF  0E
....................                      aux=0; 
0124:  CLRF   28
....................                      break; 
0125:  GOTO   134
....................                      case 2:                       // cap la possibilitat que aux=2 quan entri en aquest cas, per aixo es repeteix la comanda 
....................                      output_low(PIN_B2);           // la resta (19,5 ms) estaran en estat baix 
0126:  BSF    03.5
0127:  BCF    06.2
0128:  BCF    03.5
0129:  BCF    06.2
....................                      output_low(PIN_B1); 
012A:  BSF    03.5
012B:  BCF    06.1
012C:  BCF    03.5
012D:  BCF    06.1
....................                      set_timer1(53348); 
012E:  MOVLW  D0
012F:  MOVWF  0F
0130:  MOVLW  64
0131:  MOVWF  0E
....................                      aux=0; 
0132:  CLRF   28
....................                      break; 
0133:  GOTO   134
....................                      } 
....................                      break; 
0134:  GOTO   16A
....................                       
....................                   case 8:                         // gir en l'altre sentit 
....................                      switch(aux){ 
0135:  MOVF   28,W
0136:  BTFSC  03.2
0137:  GOTO   13F
0138:  XORLW  01
0139:  BTFSC  03.2
013A:  GOTO   14D
013B:  XORLW  03
013C:  BTFSC  03.2
013D:  GOTO   15B
013E:  GOTO   169
....................                      case 0: 
....................                      output_high(PIN_B2);          // els dos servos hauran de girar en el mateix sentit 
013F:  BSF    03.5
0140:  BCF    06.2
0141:  BCF    03.5
0142:  BSF    06.2
....................                      output_high(PIN_B1); 
0143:  BSF    03.5
0144:  BCF    06.1
0145:  BCF    03.5
0146:  BSF    06.1
....................                      set_timer1(63973);            // enviem una senyal de 2,5 ms a tots dos 
0147:  MOVLW  F9
0148:  MOVWF  0F
0149:  MOVLW  E5
014A:  MOVWF  0E
....................                      aux++; 
014B:  INCF   28,F
....................                      break; 
014C:  GOTO   169
....................                 
....................                      case 1: 
....................                      output_low(PIN_B2);           // la resta (17,5 ms) estaran en estat baix 
014D:  BSF    03.5
014E:  BCF    06.2
014F:  BCF    03.5
0150:  BCF    06.2
....................                      output_low(PIN_B1); 
0151:  BSF    03.5
0152:  BCF    06.1
0153:  BCF    03.5
0154:  BCF    06.1
....................                      set_timer1(54598); 
0155:  MOVLW  D5
0156:  MOVWF  0F
0157:  MOVLW  46
0158:  MOVWF  0E
....................                      aux=0; 
0159:  CLRF   28
....................                      break; 
015A:  GOTO   169
....................                      case 2:                       // el mateix que en el cas anterior 
....................                      output_low(PIN_B2);           // la resta (17,5 ms) estaran en estat baix 
015B:  BSF    03.5
015C:  BCF    06.2
015D:  BCF    03.5
015E:  BCF    06.2
....................                      output_low(PIN_B1); 
015F:  BSF    03.5
0160:  BCF    06.1
0161:  BCF    03.5
0162:  BCF    06.1
....................                      set_timer1(54598); 
0163:  MOVLW  D5
0164:  MOVWF  0F
0165:  MOVLW  46
0166:  MOVWF  0E
....................                      aux=0; 
0167:  CLRF   28
....................                      break; 
0168:  GOTO   169
....................                   } 
....................                   break; 
0169:  GOTO   16A
....................                }           
....................       } 
....................  
....................  
....................  
016A:  BCF    0C.0
016B:  BCF    0A.3
016C:  BCF    0A.4
016D:  GOTO   01F
.................... void linia(){           // una funcio que llegeix els sensors inferiors que llegeixen la linea 
....................    set_adc_channel(5); 
*
01AE:  MOVLW  28
01AF:  MOVWF  78
01B0:  MOVF   1F,W
01B1:  ANDLW  C7
01B2:  IORWF  78,W
01B3:  MOVWF  1F
....................    delay_ms(1); 
01B4:  MOVLW  01
01B5:  MOVWF  39
01B6:  CALL   17B
....................    dreta_linia = read_adc(); 
01B7:  BSF    1F.2
01B8:  BTFSC  1F.2
01B9:  GOTO   1B8
01BA:  MOVF   1E,W
01BB:  MOVWF  32
....................     
....................    set_adc_channel(6); 
01BC:  MOVLW  30
01BD:  MOVWF  78
01BE:  MOVF   1F,W
01BF:  ANDLW  C7
01C0:  IORWF  78,W
01C1:  MOVWF  1F
....................    delay_ms(1); 
01C2:  MOVLW  01
01C3:  MOVWF  39
01C4:  CALL   17B
....................    central_linia= read_adc(); 
01C5:  BSF    1F.2
01C6:  BTFSC  1F.2
01C7:  GOTO   1C6
01C8:  MOVF   1E,W
01C9:  MOVWF  36
....................     
....................    set_adc_channel(7); 
01CA:  MOVLW  38
01CB:  MOVWF  78
01CC:  MOVF   1F,W
01CD:  ANDLW  C7
01CE:  IORWF  78,W
01CF:  MOVWF  1F
....................    delay_ms(1); 
01D0:  MOVLW  01
01D1:  MOVWF  39
01D2:  CALL   17B
....................    esquerra_linia = read_adc(); 
01D3:  BSF    1F.2
01D4:  BTFSC  1F.2
01D5:  GOTO   1D4
01D6:  MOVF   1E,W
01D7:  MOVWF  34
.................... } 
01D8:  BCF    0A.3
01D9:  BCF    0A.4
01DA:  GOTO   220 (RETURN)
.................... void ulls(){            // una funcio que ens dona els valors dels sensors de distancia 
....................    set_adc_channel(2); 
*
018F:  MOVLW  10
0190:  MOVWF  78
0191:  MOVF   1F,W
0192:  ANDLW  C7
0193:  IORWF  78,W
0194:  MOVWF  1F
....................    delay_ms(1); 
0195:  MOVLW  01
0196:  MOVWF  39
0197:  CALL   17B
....................    dreta_ulls = read_adc(); 
0198:  BSF    1F.2
0199:  BTFSC  1F.2
019A:  GOTO   199
019B:  MOVF   1E,W
019C:  MOVWF  33
....................     
....................    set_adc_channel(3); 
019D:  MOVLW  18
019E:  MOVWF  78
019F:  MOVF   1F,W
01A0:  ANDLW  C7
01A1:  IORWF  78,W
01A2:  MOVWF  1F
....................    delay_ms(1); 
01A3:  MOVLW  01
01A4:  MOVWF  39
01A5:  CALL   17B
....................    esquerra_ulls = read_adc(); 
01A6:  BSF    1F.2
01A7:  BTFSC  1F.2
01A8:  GOTO   1A7
01A9:  MOVF   1E,W
01AA:  MOVWF  35
.................... } 
01AB:  BCF    0A.3
01AC:  BCF    0A.4
01AD:  GOTO   21F (RETURN)
....................     
....................     
.................... void main(void){ 
*
01DB:  CLRF   04
01DC:  BCF    03.7
01DD:  MOVLW  1F
01DE:  ANDWF  03,F
01DF:  MOVLW  81
01E0:  BSF    03.5
01E1:  MOVWF  19
01E2:  MOVLW  A6
01E3:  MOVWF  18
01E4:  MOVLW  90
01E5:  BCF    03.5
01E6:  MOVWF  18
01E7:  BSF    03.5
01E8:  BSF    1F.0
01E9:  BSF    1F.1
01EA:  BSF    1F.2
01EB:  BCF    1F.3
....................   int auxiliar=0;       // definim una variable auxiliar 
*
01FE:  CLRF   37
....................   set_tris_b(0x00);     // definim els ports b (on son els servos) com a output 
01FF:  MOVLW  00
0200:  BSF    03.5
0201:  MOVWF  06
....................  
....................   setup_adc(ADC_CLOCK_INTERNAL); 
0202:  BCF    03.5
0203:  BSF    1F.6
0204:  BSF    1F.7
0205:  BSF    03.5
0206:  BCF    1F.7
0207:  BCF    03.5
0208:  BSF    1F.0
....................   setup_adc_ports(ALL_ANALOG); 
0209:  BSF    03.5
020A:  BCF    1F.0
020B:  BCF    1F.1
020C:  BCF    1F.2
020D:  BCF    1F.3
....................   setup_timer_1(T1_INTERNAL|T1_DIV_BY_8);                //definim timer 1 
020E:  MOVLW  B5
020F:  BCF    03.5
0210:  MOVWF  10
....................   enable_interrupts(int_rda);               //habilitem les interrupcions 
0211:  BSF    03.5
0212:  BSF    0C.5
....................  
....................   enable_interrupts(INT_TIMER1); 
0213:  BSF    0C.0
....................   enable_interrupts(global);   
0214:  MOVLW  C0
0215:  BCF    03.5
0216:  IORWF  0B,F
....................    
....................   delay_ms(5000);       // 5 segons abans de iniciar el programa 
0217:  MOVLW  14
0218:  MOVWF  38
0219:  MOVLW  FA
021A:  MOVWF  39
021B:  CALL   17B
021C:  DECFSZ 38,F
021D:  GOTO   219
....................   while(1){ 
....................   ulls();               // llegim els valors tant de els sensors de distancia com els de linea 
021E:  GOTO   18F
....................   linia(); 
021F:  GOTO   1AE
....................   if (dreta_linia < umbral_linia){      // si es dispara el sensor de linea dret 
0220:  MOVF   2A,W
0221:  SUBWF  32,W
0222:  BTFSC  03.0
0223:  GOTO   23B
....................       if (auxiliar != 1){ 
0224:  DECFSZ 37,W
0225:  GOTO   227
0226:  GOTO   230
....................       movimiento = endarrere;           // anira enrere 1 cop durant 700 ms i girara sobre si mateix durant 500 ms 
0227:  MOVF   2E,W
0228:  MOVWF  29
....................       delay_ms(700); 
0229:  MOVLW  04
022A:  MOVWF  38
022B:  MOVLW  AF
022C:  MOVWF  39
022D:  CALL   17B
022E:  DECFSZ 38,F
022F:  GOTO   22B
....................       } 
....................       movimiento=volta_antirellotge; 
0230:  MOVF   31,W
0231:  MOVWF  29
....................       delay_ms(500); 
0232:  MOVLW  02
0233:  MOVWF  38
0234:  MOVLW  FA
0235:  MOVWF  39
0236:  CALL   17B
0237:  DECFSZ 38,F
0238:  GOTO   234
....................       auxiliar=1; 
0239:  MOVLW  01
023A:  MOVWF  37
....................   } 
....................    
....................   if (esquerra_linia < umbral_linia){    // semblant per als altres sensors 
023B:  MOVF   2A,W
023C:  SUBWF  34,W
023D:  BTFSC  03.0
023E:  GOTO   257
....................       if (auxiliar != 2){ 
023F:  MOVF   37,W
0240:  SUBLW  02
0241:  BTFSC  03.2
0242:  GOTO   24C
....................          movimiento = endarrere; 
0243:  MOVF   2E,W
0244:  MOVWF  29
....................          delay_ms(700); 
0245:  MOVLW  04
0246:  MOVWF  38
0247:  MOVLW  AF
0248:  MOVWF  39
0249:  CALL   17B
024A:  DECFSZ 38,F
024B:  GOTO   247
....................          } 
....................          movimiento=volta_rellotge; 
024C:  MOVF   30,W
024D:  MOVWF  29
....................          delay_ms(500); 
024E:  MOVLW  02
024F:  MOVWF  38
0250:  MOVLW  FA
0251:  MOVWF  39
0252:  CALL   17B
0253:  DECFSZ 38,F
0254:  GOTO   250
....................          auxiliar=2; 
0255:  MOVLW  02
0256:  MOVWF  37
....................   } 
....................   if (central_linia < umbral_linia){     
0257:  MOVF   2A,W
0258:  SUBWF  36,W
0259:  BTFSC  03.0
025A:  GOTO   273
....................       if (auxiliar != 2){ 
025B:  MOVF   37,W
025C:  SUBLW  02
025D:  BTFSC  03.2
025E:  GOTO   268
....................          movimiento = endarrere; 
025F:  MOVF   2E,W
0260:  MOVWF  29
....................          delay_ms(700); 
0261:  MOVLW  04
0262:  MOVWF  38
0263:  MOVLW  AF
0264:  MOVWF  39
0265:  CALL   17B
0266:  DECFSZ 38,F
0267:  GOTO   263
....................          } 
....................          movimiento=volta_rellotge; 
0268:  MOVF   30,W
0269:  MOVWF  29
....................          delay_ms(500); 
026A:  MOVLW  02
026B:  MOVWF  38
026C:  MOVLW  FA
026D:  MOVWF  39
026E:  CALL   17B
026F:  DECFSZ 38,F
0270:  GOTO   26C
....................          auxiliar=2; 
0271:  MOVLW  02
0272:  MOVWF  37
....................   } 
....................   if (dreta_ulls > umbral_distancia_dreta){        // si detectem al sensor de la dreta 
0273:  MOVF   33,W
0274:  SUBWF  2C,W
0275:  BTFSC  03.0
0276:  GOTO   281
....................      if (esquerra_ulls > umbral_distancia_esquerra){  // i detectem al de l'esquerra 
0277:  MOVF   35,W
0278:  SUBWF  2B,W
0279:  BTFSC  03.0
027A:  GOTO   27E
....................      movimiento=endavant;                             // el robot anira endavant 
027B:  MOVF   2D,W
027C:  MOVWF  29
....................            } 
....................      else{ 
027D:  GOTO   280
....................      movimiento=volta_rellotge;                    // si nomes llegeix dreta, llavors fara un gir en sentit de les agulles del rellotge 
027E:  MOVF   30,W
027F:  MOVWF  29
....................      } 
....................   } 
....................   else{ 
0280:  GOTO   299
....................    if (esquerra_ulls > umbral_distancia_esquerra){ // si no detecta dreta pero si esquerra, fara un gir en l'altre sentit 
0281:  MOVF   35,W
0282:  SUBWF  2B,W
0283:  BTFSC  03.0
0284:  GOTO   288
....................      movimiento=volta_antirellotge; 
0285:  MOVF   31,W
0286:  MOVWF  29
....................      } 
....................      else{                    // si no detecta res 
0287:  GOTO   299
....................      if (auxiliar != 3){       
0288:  MOVF   37,W
0289:  SUBLW  03
028A:  BTFSC  03.2
028B:  GOTO   295
....................      movimiento=endavant;     // anira endavant durant 500 ms 
028C:  MOVF   2D,W
028D:  MOVWF  29
....................      delay_ms(500);           // possible contramesura per si es empes per un lateral o per darrere 
028E:  MOVLW  02
028F:  MOVWF  38
0290:  MOVLW  FA
0291:  MOVWF  39
0292:  CALL   17B
0293:  DECFSZ 38,F
0294:  GOTO   290
....................      } 
....................      auxiliar=3;               
0295:  MOVLW  03
0296:  MOVWF  37
....................      movimiento=rastreig;     // inicia el moviment de rastreig 
0297:  MOVF   2F,W
0298:  MOVWF  29
....................       
....................      } 
....................   } 
....................    
....................   } 
0299:  GOTO   21E
.................... } 
029A:  SLEEP

Configuration Fuses:
   Word  1: 3F71   XT NOWDT PUT NOPROTECT BROWNOUT NOLVP NOCPD NOWRT NODEBUG
